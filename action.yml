name: 'Run on Arm Virtual Target on AMI'
description: 'Load executable file to an Arm Virtual Target to execute'

inputs:
  ec2_security_group_id:
    description: 'security group for EC2 instance'
    required: false
    default: ''
  ec2_instance_id:
    description: 'instance id for connection'
    required: false
    default: ''
  ec2_instance_type:
    description: 'EC2 instance type'
    required: false
    default: 't2.micro'
  iam_profile:
    description: 'IAM role name'
    required: false
    default: ''
  s3_bucket_name:
    description: S3 Bucket to upload files used on EC2 instance
    required: true
    default: ''
  ssh_key_name:
    description: 'optional SSH Key name'
    required: false
    default: ''
  subnet_id:
    description: 'subnet_id for the EC2 instance'
    required: false
    default: ''
  terminate_ec2_instance:
    description: 'should ec2 instance be terminated after running it?'
    required: false
    default: 'false'
  vht_ami_id:
    description: 'VHT AMI ID'
    required: false
    default: ''
  vht_ami_version:
    description: 'VHT AMI Version'
    required: false
    default: '1.0.0'
  vht_in:
    description: 'path to test_suite'
    required: true

outputs:
  vht_out:
    description: 'path to results'
    value: test

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
      with:
        repository: 'ARM-software/VHT'
        ref: 'main'
        path: vht_module

    - name: Install VHT module
      run: |
        pip install .
      shell: bash
      working-directory: vht_module/infrastructure/python_resources

    - name: Create the VHT.tar of ${{ inputs.vht_in }}
      run: tar -cf vht.tar ${{ inputs.vht_in }}
      shell: bash

    - name: List files from the vht.tar file
      run: tar -tvf vht.tar
      shell: bash

    - name: Run Python GitHub Action
      run: |
        python3 vht_github_action.py
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        ami_id: ${{ inputs.vht_ami_id }}
        ami_version: ${{ inputs.vht_ami_version }}
        instance_id: ${{ inputs.ec2_instance_id }}
        iam_profile: ${{ inputs.iam_profile }}
        instance_type: ${{ inputs.ec2_instance_type }}
        gh_workspace: ${{ github.workspace }}
        s3_bucket_name: ${{ inputs.s3_bucket_name }}
        s3_keyprefix: 'ssm'
        security_group_id: ${{ inputs.ec2_security_group_id }}
        subnet_id: ${{ inputs.subnet_id }}
        terminate_ec2_instance: ${{ inputs.terminate_ec2_instance }}
